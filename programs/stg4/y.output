Terminals unused in grammar

   NL
   INC
   DEC
   BREAK
   CNTU


Grammar

    0 $accept: program $end

    1 program: Declarations main

    2 main: START Slist END ';'
    3     | START END ';'

    4 Slist: Slist Stmt
    5      | Stmt

    6 Stmt: InputStmt
    7     | OutputStmt
    8     | AsgStmt
    9     | IfStmt
   10     | WhileStmt

   11 InputStmt: READ '(' ID ')' ';'

   12 OutputStmt: WRITE '(' expr ')' ';'

   13 AsgStmt: ID '=' expr ';'

   14 IfStmt: IF '(' expr ')' THEN Slist ELSE Slist ENDIF ';'
   15       | IF '(' expr ')' THEN Slist ENDIF ';'

   16 WhileStmt: WHILE '(' expr ')' DO Slist ENDWHILE ';'

   17 expr: expr PLUS expr
   18     | expr MINUS expr
   19     | expr MUL expr
   20     | expr DIV expr
   21     | '(' expr ')'
   22     | NUM
   23     | expr LT expr
   24     | expr LE expr
   25     | expr GT expr
   26     | expr GE expr
   27     | expr EQ expr
   28     | expr NE expr
   29     | ID

   30 Declarations: DECL DeclList ENDDECL
   31             | DECL ENDDECL

   32 DeclList: DeclList Decl
   33         | Decl

   34 Decl: Type VarList ';'

   35 Type: INTG
   36     | STR

   37 VarList: VarList ',' ID
   38        | ID


Terminals, with rules where they appear

$end (0) 0
'(' (40) 11 12 14 15 16 21
')' (41) 11 12 14 15 16 21
',' (44) 37
';' (59) 2 3 11 12 13 14 15 16 34
'=' (61) 13
error (256)
NUM (258) 22
ID (259) 11 13 29 37 38
PLUS (260) 17
MINUS (261) 18
MUL (262) 19
DIV (263) 20
START (264) 2 3
END (265) 2 3
NL (266)
READ (267) 11
WRITE (268) 12
IF (269) 14 15
THEN (270) 14 15
ELSE (271) 14
ENDIF (272) 14 15
WHILE (273) 16
DO (274) 16
ENDWHILE (275) 16
LT (276) 23
LE (277) 24
GT (278) 25
GE (279) 26
EQ (280) 27
NE (281) 28
INC (282)
DEC (283)
BREAK (284)
CNTU (285)
DECL (286) 30 31
ENDDECL (287) 30 31
STR (288) 36
INTG (289) 35


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
main (42)
    on left: 2 3, on right: 1
Slist (43)
    on left: 4 5, on right: 2 4 14 15 16
Stmt (44)
    on left: 6 7 8 9 10, on right: 4 5
InputStmt (45)
    on left: 11, on right: 6
OutputStmt (46)
    on left: 12, on right: 7
AsgStmt (47)
    on left: 13, on right: 8
IfStmt (48)
    on left: 14 15, on right: 9
WhileStmt (49)
    on left: 16, on right: 10
expr (50)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29, on right: 12 13
    14 15 16 17 18 19 20 21 23 24 25 26 27 28
Declarations (51)
    on left: 30 31, on right: 1
DeclList (52)
    on left: 32 33, on right: 30 32
Decl (53)
    on left: 34, on right: 32 33
Type (54)
    on left: 35 36, on right: 34
VarList (55)
    on left: 37 38, on right: 34 37


State 0

    0 $accept: . program $end

    DECL  shift, and go to state 1

    program       go to state 2
    Declarations  go to state 3


State 1

   30 Declarations: DECL . DeclList ENDDECL
   31             | DECL . ENDDECL

    ENDDECL  shift, and go to state 4
    STR      shift, and go to state 5
    INTG     shift, and go to state 6

    DeclList  go to state 7
    Decl      go to state 8
    Type      go to state 9


State 2

    0 $accept: program . $end

    $end  shift, and go to state 10


State 3

    1 program: Declarations . main

    START  shift, and go to state 11

    main  go to state 12


State 4

   31 Declarations: DECL ENDDECL .

    $default  reduce using rule 31 (Declarations)


State 5

   36 Type: STR .

    $default  reduce using rule 36 (Type)


State 6

   35 Type: INTG .

    $default  reduce using rule 35 (Type)


State 7

   30 Declarations: DECL DeclList . ENDDECL
   32 DeclList: DeclList . Decl

    ENDDECL  shift, and go to state 13
    STR      shift, and go to state 5
    INTG     shift, and go to state 6

    Decl  go to state 14
    Type  go to state 9


State 8

   33 DeclList: Decl .

    $default  reduce using rule 33 (DeclList)


State 9

   34 Decl: Type . VarList ';'

    ID  shift, and go to state 15

    VarList  go to state 16


State 10

    0 $accept: program $end .

    $default  accept


State 11

    2 main: START . Slist END ';'
    3     | START . END ';'

    ID     shift, and go to state 17
    END    shift, and go to state 18
    READ   shift, and go to state 19
    WRITE  shift, and go to state 20
    IF     shift, and go to state 21
    WHILE  shift, and go to state 22

    Slist       go to state 23
    Stmt        go to state 24
    InputStmt   go to state 25
    OutputStmt  go to state 26
    AsgStmt     go to state 27
    IfStmt      go to state 28
    WhileStmt   go to state 29


State 12

    1 program: Declarations main .

    $default  reduce using rule 1 (program)


State 13

   30 Declarations: DECL DeclList ENDDECL .

    $default  reduce using rule 30 (Declarations)


State 14

   32 DeclList: DeclList Decl .

    $default  reduce using rule 32 (DeclList)


State 15

   38 VarList: ID .

    $default  reduce using rule 38 (VarList)


State 16

   34 Decl: Type VarList . ';'
   37 VarList: VarList . ',' ID

    ';'  shift, and go to state 30
    ','  shift, and go to state 31


State 17

   13 AsgStmt: ID . '=' expr ';'

    '='  shift, and go to state 32


State 18

    3 main: START END . ';'

    ';'  shift, and go to state 33


State 19

   11 InputStmt: READ . '(' ID ')' ';'

    '('  shift, and go to state 34


State 20

   12 OutputStmt: WRITE . '(' expr ')' ';'

    '('  shift, and go to state 35


State 21

   14 IfStmt: IF . '(' expr ')' THEN Slist ELSE Slist ENDIF ';'
   15       | IF . '(' expr ')' THEN Slist ENDIF ';'

    '('  shift, and go to state 36


State 22

   16 WhileStmt: WHILE . '(' expr ')' DO Slist ENDWHILE ';'

    '('  shift, and go to state 37


State 23

    2 main: START Slist . END ';'
    4 Slist: Slist . Stmt

    ID     shift, and go to state 17
    END    shift, and go to state 38
    READ   shift, and go to state 19
    WRITE  shift, and go to state 20
    IF     shift, and go to state 21
    WHILE  shift, and go to state 22

    Stmt        go to state 39
    InputStmt   go to state 25
    OutputStmt  go to state 26
    AsgStmt     go to state 27
    IfStmt      go to state 28
    WhileStmt   go to state 29


State 24

    5 Slist: Stmt .

    $default  reduce using rule 5 (Slist)


State 25

    6 Stmt: InputStmt .

    $default  reduce using rule 6 (Stmt)


State 26

    7 Stmt: OutputStmt .

    $default  reduce using rule 7 (Stmt)


State 27

    8 Stmt: AsgStmt .

    $default  reduce using rule 8 (Stmt)


State 28

    9 Stmt: IfStmt .

    $default  reduce using rule 9 (Stmt)


State 29

   10 Stmt: WhileStmt .

    $default  reduce using rule 10 (Stmt)


State 30

   34 Decl: Type VarList ';' .

    $default  reduce using rule 34 (Decl)


State 31

   37 VarList: VarList ',' . ID

    ID  shift, and go to state 40


State 32

   13 AsgStmt: ID '=' . expr ';'

    NUM  shift, and go to state 41
    ID   shift, and go to state 42
    '('  shift, and go to state 43

    expr  go to state 44


State 33

    3 main: START END ';' .

    $default  reduce using rule 3 (main)


State 34

   11 InputStmt: READ '(' . ID ')' ';'

    ID  shift, and go to state 45


State 35

   12 OutputStmt: WRITE '(' . expr ')' ';'

    NUM  shift, and go to state 41
    ID   shift, and go to state 42
    '('  shift, and go to state 43

    expr  go to state 46


State 36

   14 IfStmt: IF '(' . expr ')' THEN Slist ELSE Slist ENDIF ';'
   15       | IF '(' . expr ')' THEN Slist ENDIF ';'

    NUM  shift, and go to state 41
    ID   shift, and go to state 42
    '('  shift, and go to state 43

    expr  go to state 47


State 37

   16 WhileStmt: WHILE '(' . expr ')' DO Slist ENDWHILE ';'

    NUM  shift, and go to state 41
    ID   shift, and go to state 42
    '('  shift, and go to state 43

    expr  go to state 48


State 38

    2 main: START Slist END . ';'

    ';'  shift, and go to state 49


State 39

    4 Slist: Slist Stmt .

    $default  reduce using rule 4 (Slist)


State 40

   37 VarList: VarList ',' ID .

    $default  reduce using rule 37 (VarList)


State 41

   22 expr: NUM .

    $default  reduce using rule 22 (expr)


State 42

   29 expr: ID .

    $default  reduce using rule 29 (expr)


State 43

   21 expr: '(' . expr ')'

    NUM  shift, and go to state 41
    ID   shift, and go to state 42
    '('  shift, and go to state 43

    expr  go to state 50


State 44

   13 AsgStmt: ID '=' expr . ';'
   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   23     | expr . LT expr
   24     | expr . LE expr
   25     | expr . GT expr
   26     | expr . GE expr
   27     | expr . EQ expr
   28     | expr . NE expr

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    LT     shift, and go to state 55
    LE     shift, and go to state 56
    GT     shift, and go to state 57
    GE     shift, and go to state 58
    EQ     shift, and go to state 59
    NE     shift, and go to state 60
    ';'    shift, and go to state 61


State 45

   11 InputStmt: READ '(' ID . ')' ';'

    ')'  shift, and go to state 62


State 46

   12 OutputStmt: WRITE '(' expr . ')' ';'
   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   23     | expr . LT expr
   24     | expr . LE expr
   25     | expr . GT expr
   26     | expr . GE expr
   27     | expr . EQ expr
   28     | expr . NE expr

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    LT     shift, and go to state 55
    LE     shift, and go to state 56
    GT     shift, and go to state 57
    GE     shift, and go to state 58
    EQ     shift, and go to state 59
    NE     shift, and go to state 60
    ')'    shift, and go to state 63


State 47

   14 IfStmt: IF '(' expr . ')' THEN Slist ELSE Slist ENDIF ';'
   15       | IF '(' expr . ')' THEN Slist ENDIF ';'
   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   23     | expr . LT expr
   24     | expr . LE expr
   25     | expr . GT expr
   26     | expr . GE expr
   27     | expr . EQ expr
   28     | expr . NE expr

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    LT     shift, and go to state 55
    LE     shift, and go to state 56
    GT     shift, and go to state 57
    GE     shift, and go to state 58
    EQ     shift, and go to state 59
    NE     shift, and go to state 60
    ')'    shift, and go to state 64


State 48

   16 WhileStmt: WHILE '(' expr . ')' DO Slist ENDWHILE ';'
   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   23     | expr . LT expr
   24     | expr . LE expr
   25     | expr . GT expr
   26     | expr . GE expr
   27     | expr . EQ expr
   28     | expr . NE expr

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    LT     shift, and go to state 55
    LE     shift, and go to state 56
    GT     shift, and go to state 57
    GE     shift, and go to state 58
    EQ     shift, and go to state 59
    NE     shift, and go to state 60
    ')'    shift, and go to state 65


State 49

    2 main: START Slist END ';' .

    $default  reduce using rule 2 (main)


State 50

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   21     | '(' expr . ')'
   23     | expr . LT expr
   24     | expr . LE expr
   25     | expr . GT expr
   26     | expr . GE expr
   27     | expr . EQ expr
   28     | expr . NE expr

    PLUS   shift, and go to state 51
    MINUS  shift, and go to state 52
    MUL    shift, and go to state 53
    DIV    shift, and go to state 54
    LT     shift, and go to state 55
    LE     shift, and go to state 56
    GT     shift, and go to state 57
    GE     shift, and go to state 58
    EQ     shift, and go to state 59
    NE     shift, and go to state 60
    ')'    shift, and go to state 66


State 51

   17 expr: expr PLUS . expr

    NUM  shift, and go to state 41
    ID   shift, and go to state 42
    '('  shift, and go to state 43

    expr  go to state 67


State 52

   18 expr: expr MINUS . expr

    NUM  shift, and go to state 41
    ID   shift, and go to state 42
    '('  shift, and go to state 43

    expr  go to state 68


State 53

   19 expr: expr MUL . expr

    NUM  shift, and go to state 41
    ID   shift, and go to state 42
    '('  shift, and go to state 43

    expr  go to state 69


State 54

   20 expr: expr DIV . expr

    NUM  shift, and go to state 41
    ID   shift, and go to state 42
    '('  shift, and go to state 43

    expr  go to state 70


State 55

   23 expr: expr LT . expr

    NUM  shift, and go to state 41
    ID   shift, and go to state 42
    '('  shift, and go to state 43

    expr  go to state 71


State 56

   24 expr: expr LE . expr

    NUM  shift, and go to state 41
    ID   shift, and go to state 42
    '('  shift, and go to state 43

    expr  go to state 72


State 57

   25 expr: expr GT . expr

    NUM  shift, and go to state 41
    ID   shift, and go to state 42
    '('  shift, and go to state 43

    expr  go to state 73


State 58

   26 expr: expr GE . expr

    NUM  shift, and go to state 41
    ID   shift, and go to state 42
    '('  shift, and go to state 43

    expr  go to state 74


State 59

   27 expr: expr EQ . expr

    NUM  shift, and go to state 41
    ID   shift, and go to state 42
    '('  shift, and go to state 43

    expr  go to state 75


State 60

   28 expr: expr NE . expr

    NUM  shift, and go to state 41
    ID   shift, and go to state 42
    '('  shift, and go to state 43

    expr  go to state 76


State 61

   13 AsgStmt: ID '=' expr ';' .

    $default  reduce using rule 13 (AsgStmt)


State 62

   11 InputStmt: READ '(' ID ')' . ';'

    ';'  shift, and go to state 77


State 63

   12 OutputStmt: WRITE '(' expr ')' . ';'

    ';'  shift, and go to state 78


State 64

   14 IfStmt: IF '(' expr ')' . THEN Slist ELSE Slist ENDIF ';'
   15       | IF '(' expr ')' . THEN Slist ENDIF ';'

    THEN  shift, and go to state 79


State 65

   16 WhileStmt: WHILE '(' expr ')' . DO Slist ENDWHILE ';'

    DO  shift, and go to state 80


State 66

   21 expr: '(' expr ')' .

    $default  reduce using rule 21 (expr)


State 67

   17 expr: expr . PLUS expr
   17     | expr PLUS expr .
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   23     | expr . LT expr
   24     | expr . LE expr
   25     | expr . GT expr
   26     | expr . GE expr
   27     | expr . EQ expr
   28     | expr . NE expr

    MUL  shift, and go to state 53
    DIV  shift, and go to state 54
    LT   shift, and go to state 55
    LE   shift, and go to state 56
    GT   shift, and go to state 57
    GE   shift, and go to state 58
    EQ   shift, and go to state 59
    NE   shift, and go to state 60

    $default  reduce using rule 17 (expr)


State 68

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   18     | expr MINUS expr .
   19     | expr . MUL expr
   20     | expr . DIV expr
   23     | expr . LT expr
   24     | expr . LE expr
   25     | expr . GT expr
   26     | expr . GE expr
   27     | expr . EQ expr
   28     | expr . NE expr

    MUL  shift, and go to state 53
    DIV  shift, and go to state 54
    LT   shift, and go to state 55
    LE   shift, and go to state 56
    GT   shift, and go to state 57
    GE   shift, and go to state 58
    EQ   shift, and go to state 59
    NE   shift, and go to state 60

    $default  reduce using rule 18 (expr)


State 69

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   19     | expr MUL expr .
   20     | expr . DIV expr
   23     | expr . LT expr
   24     | expr . LE expr
   25     | expr . GT expr
   26     | expr . GE expr
   27     | expr . EQ expr
   28     | expr . NE expr

    LT  shift, and go to state 55
    LE  shift, and go to state 56
    GT  shift, and go to state 57
    GE  shift, and go to state 58
    EQ  shift, and go to state 59
    NE  shift, and go to state 60

    $default  reduce using rule 19 (expr)


State 70

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   20     | expr DIV expr .
   23     | expr . LT expr
   24     | expr . LE expr
   25     | expr . GT expr
   26     | expr . GE expr
   27     | expr . EQ expr
   28     | expr . NE expr

    LT  shift, and go to state 55
    LE  shift, and go to state 56
    GT  shift, and go to state 57
    GE  shift, and go to state 58
    EQ  shift, and go to state 59
    NE  shift, and go to state 60

    $default  reduce using rule 20 (expr)


State 71

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   23     | expr . LT expr
   23     | expr LT expr .
   24     | expr . LE expr
   25     | expr . GT expr
   26     | expr . GE expr
   27     | expr . EQ expr
   28     | expr . NE expr

    LT  error (nonassociative)
    LE  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 72

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   23     | expr . LT expr
   24     | expr . LE expr
   24     | expr LE expr .
   25     | expr . GT expr
   26     | expr . GE expr
   27     | expr . EQ expr
   28     | expr . NE expr

    LT  error (nonassociative)
    LE  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 73

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   23     | expr . LT expr
   24     | expr . LE expr
   25     | expr . GT expr
   25     | expr GT expr .
   26     | expr . GE expr
   27     | expr . EQ expr
   28     | expr . NE expr

    LT  error (nonassociative)
    LE  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 74

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   23     | expr . LT expr
   24     | expr . LE expr
   25     | expr . GT expr
   26     | expr . GE expr
   26     | expr GE expr .
   27     | expr . EQ expr
   28     | expr . NE expr

    LT  error (nonassociative)
    LE  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 75

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   23     | expr . LT expr
   24     | expr . LE expr
   25     | expr . GT expr
   26     | expr . GE expr
   27     | expr . EQ expr
   27     | expr EQ expr .
   28     | expr . NE expr

    LT  error (nonassociative)
    LE  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 76

   17 expr: expr . PLUS expr
   18     | expr . MINUS expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   23     | expr . LT expr
   24     | expr . LE expr
   25     | expr . GT expr
   26     | expr . GE expr
   27     | expr . EQ expr
   28     | expr . NE expr
   28     | expr NE expr .

    LT  error (nonassociative)
    LE  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)
    EQ  error (nonassociative)
    NE  error (nonassociative)

    $default  reduce using rule 28 (expr)


State 77

   11 InputStmt: READ '(' ID ')' ';' .

    $default  reduce using rule 11 (InputStmt)


State 78

   12 OutputStmt: WRITE '(' expr ')' ';' .

    $default  reduce using rule 12 (OutputStmt)


State 79

   14 IfStmt: IF '(' expr ')' THEN . Slist ELSE Slist ENDIF ';'
   15       | IF '(' expr ')' THEN . Slist ENDIF ';'

    ID     shift, and go to state 17
    READ   shift, and go to state 19
    WRITE  shift, and go to state 20
    IF     shift, and go to state 21
    WHILE  shift, and go to state 22

    Slist       go to state 81
    Stmt        go to state 24
    InputStmt   go to state 25
    OutputStmt  go to state 26
    AsgStmt     go to state 27
    IfStmt      go to state 28
    WhileStmt   go to state 29


State 80

   16 WhileStmt: WHILE '(' expr ')' DO . Slist ENDWHILE ';'

    ID     shift, and go to state 17
    READ   shift, and go to state 19
    WRITE  shift, and go to state 20
    IF     shift, and go to state 21
    WHILE  shift, and go to state 22

    Slist       go to state 82
    Stmt        go to state 24
    InputStmt   go to state 25
    OutputStmt  go to state 26
    AsgStmt     go to state 27
    IfStmt      go to state 28
    WhileStmt   go to state 29


State 81

    4 Slist: Slist . Stmt
   14 IfStmt: IF '(' expr ')' THEN Slist . ELSE Slist ENDIF ';'
   15       | IF '(' expr ')' THEN Slist . ENDIF ';'

    ID     shift, and go to state 17
    READ   shift, and go to state 19
    WRITE  shift, and go to state 20
    IF     shift, and go to state 21
    ELSE   shift, and go to state 83
    ENDIF  shift, and go to state 84
    WHILE  shift, and go to state 22

    Stmt        go to state 39
    InputStmt   go to state 25
    OutputStmt  go to state 26
    AsgStmt     go to state 27
    IfStmt      go to state 28
    WhileStmt   go to state 29


State 82

    4 Slist: Slist . Stmt
   16 WhileStmt: WHILE '(' expr ')' DO Slist . ENDWHILE ';'

    ID        shift, and go to state 17
    READ      shift, and go to state 19
    WRITE     shift, and go to state 20
    IF        shift, and go to state 21
    WHILE     shift, and go to state 22
    ENDWHILE  shift, and go to state 85

    Stmt        go to state 39
    InputStmt   go to state 25
    OutputStmt  go to state 26
    AsgStmt     go to state 27
    IfStmt      go to state 28
    WhileStmt   go to state 29


State 83

   14 IfStmt: IF '(' expr ')' THEN Slist ELSE . Slist ENDIF ';'

    ID     shift, and go to state 17
    READ   shift, and go to state 19
    WRITE  shift, and go to state 20
    IF     shift, and go to state 21
    WHILE  shift, and go to state 22

    Slist       go to state 86
    Stmt        go to state 24
    InputStmt   go to state 25
    OutputStmt  go to state 26
    AsgStmt     go to state 27
    IfStmt      go to state 28
    WhileStmt   go to state 29


State 84

   15 IfStmt: IF '(' expr ')' THEN Slist ENDIF . ';'

    ';'  shift, and go to state 87


State 85

   16 WhileStmt: WHILE '(' expr ')' DO Slist ENDWHILE . ';'

    ';'  shift, and go to state 88


State 86

    4 Slist: Slist . Stmt
   14 IfStmt: IF '(' expr ')' THEN Slist ELSE Slist . ENDIF ';'

    ID     shift, and go to state 17
    READ   shift, and go to state 19
    WRITE  shift, and go to state 20
    IF     shift, and go to state 21
    ENDIF  shift, and go to state 89
    WHILE  shift, and go to state 22

    Stmt        go to state 39
    InputStmt   go to state 25
    OutputStmt  go to state 26
    AsgStmt     go to state 27
    IfStmt      go to state 28
    WhileStmt   go to state 29


State 87

   15 IfStmt: IF '(' expr ')' THEN Slist ENDIF ';' .

    $default  reduce using rule 15 (IfStmt)


State 88

   16 WhileStmt: WHILE '(' expr ')' DO Slist ENDWHILE ';' .

    $default  reduce using rule 16 (WhileStmt)


State 89

   14 IfStmt: IF '(' expr ')' THEN Slist ELSE Slist ENDIF . ';'

    ';'  shift, and go to state 90


State 90

   14 IfStmt: IF '(' expr ')' THEN Slist ELSE Slist ENDIF ';' .

    $default  reduce using rule 14 (IfStmt)
